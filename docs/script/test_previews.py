"""
A helper script to test out what social previews look like.
I should remove this when I'm happy with the result.
"""
# %load_ext autoreload
# %autoreload 2

from pathlib import Path
from textwrap import dedent
from sphinx_social_previews.card import create_social_card_objects
import random
from sphinx_social_previews.card import MAX_CHAR_PAGE_TITLE, MAX_CHAR_DESCRIPTION

here = Path(__file__).parent

# Dummy lorem text
lorem = """
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum
""".split()  # noqa

# Create basic figures
fig, txtsite, txtpage, txtdesc, txturl = create_social_card_objects(
    # image="docs/_static/logo-wide.png",
    image=here / "../_static/logo.png",
    image_mini=here / "../../sphinx_social_previews/_static/logo-mini.png",
)

embed_text = []
for perm in range(20):
    # Fixed site title since this is not autogenerated
    txtsite.set_text("Chris Holdgraf's website")

    # Create dummy text description and pagetitle for this iteration
    random.shuffle(lorem)
    title = " ".join(lorem[:100])
    title = title[: MAX_CHAR_PAGE_TITLE - 3] + "..."
    txtpage.set_text(title)

    random.shuffle(lorem)
    desc = " ".join(lorem[:100])
    desc = desc[: MAX_CHAR_DESCRIPTION - 3] + "..."
    txtdesc.set_text(desc)

    txturl.set_text("chrisholdgraf.com")
    path_tmp = Path(here / "../tmp")
    path_tmp.mkdir(exist_ok=True)
    path_out = Path(path_tmp / f"num_{perm}.png")
    fig.savefig(path_out, facecolor="w")

    path_examples_page_folder = here / ".."
    embed_text.append(
        dedent(
            f"""
    ````{{grid-item}}
    ```{{image}} {path_out.relative_to(path_examples_page_folder)}
    ```
    ````
    """
        )
    )

embed_text = "\n".join(embed_text)
embed_text = f"""
`````{{grid}} 2
{embed_text}
`````
"""

# Write markdown text that we can use to embed these images in the docs
(here / "../tmp/embed.md").write_text(embed_text)
